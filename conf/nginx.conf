worker_processes  1;
error_log stderr notice;

events {
    worker_connections 16384;
}
http {
    server {
        listen 8080;
        include       mime.types;
        default_type  application/octet-stream;
        root .;
        sendfile        on;
        access_log off;
        location / {
            lua_need_request_body on;
            lua_code_cache on;
            content_by_lua_file index.lua;
            index  index.lua index.lp;
        }

        location ~ ^/[^.]+$ {
            lua_need_request_body on;
            lua_code_cache off;
            content_by_lua_file index.lua;
            rewrite_by_lua '
                local utils = require "web_utils.utils"
                local path = utils.split(ngx.var.uri,[[/]])
                local args = {}
                local start

                if #path % 2 == 0 then 
                    args[#args+1] = "r="..path[1]..[[/]]..path[2]
                    start = 3
                else
                    args[#args+1] = "r="..path[1]
                    start = 2
                end

                for i=start,#path,2 do
                    args[#args+1] = path[i].."="..tostring(path[i+1])
                end

                ngx.req.set_uri_args(table.concat(args,"&"))
                ngx.req.set_uri("/index.lua")
            ';
        }

        location ~ \.(css|eot|js|json|gif|jpg|png|svg|ttf|woff)$ {
        }
    }
}